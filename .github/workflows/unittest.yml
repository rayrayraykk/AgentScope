name: Python Unittest Coverage

on: [push, pull_request]

jobs:
  test:
    if: false == contains(github.event.pull_request.title, 'WIP')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.9'
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@master
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        pip install -q -e .[full]
        pip install coverage
    - name: Run tests with coverage
      run: |
        coverage run tests/run.py
    - name: Generate coverage report
      run: |
        coverage report -m > coverage.txt
        - name: Post coverage report as PR comment
          if: github.event_name == 'pull_request'
          uses: actions/github-script@v3
          with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              const fs = require('fs');
              const report = fs.readFileSync('coverage.txt', {encoding:'utf8', flag:'r'});
              const commentBody = `ðŸ“Š **Coverage Report**:\n\`\`\`\n${report}\n\`\`\``;
              const issue_number = context.issue.number;
              github.issues.createComment({
                ...context.repo,
                issue_number,
                body: commentBody
              });